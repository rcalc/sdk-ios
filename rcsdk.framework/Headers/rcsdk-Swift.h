// Generated by Apple Swift version 3.1 (swiftlang-802.0.48 clang-802.0.38)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import ObjectiveC;
@import Security;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSNumber (SWIFT_EXTENSION(rcsdk))
@end

@class UIViewController;
@class RCDetectResBase;

SWIFT_CLASS("_TtC5rcsdk5RCAPI")
@interface RCAPI : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCAPI * _Nonnull instance;)
+ (RCAPI * _Nonnull)instance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL debug;)
+ (BOOL)debug SWIFT_WARN_UNUSED_RESULT;
+ (void)setDebug:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL log;)
+ (BOOL)log SWIFT_WARN_UNUSED_RESULT;
+ (void)setLog:(BOOL)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (void)initialWithContext:(id _Nonnull)context appid:(NSString * _Nonnull)appid chanid:(NSString * _Nonnull)chanid;
+ (void)run;
+ (void)run:(UIViewController * _Nonnull)context appid:(NSString * _Nonnull)appid chanid:(NSString * _Nonnull)chanid;
+ (void)setHandle:(SWIFT_NOESCAPE NSInteger (^ _Nonnull)(NSInteger, NSString * _Nonnull, NSString * _Nonnull, NSString * _Nonnull, NSString * _Nonnull))handle;
+ (void)stop;
+ (NSInteger)putKeyValue:(NSString * _Nonnull)key value:(id _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getUuid SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getLocalUuid SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSRoot;)
+ (RCDetectResBase * _Nonnull)RSRoot SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSAttack;)
+ (RCDetectResBase * _Nonnull)RSAttack SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSEmulator;)
+ (RCDetectResBase * _Nonnull)RSEmulator SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSDebugger;)
+ (RCDetectResBase * _Nonnull)RSDebugger SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSArea;)
+ (RCDetectResBase * _Nonnull)RSArea SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSBattery;)
+ (RCDetectResBase * _Nonnull)RSBattery SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSMockGPS;)
+ (RCDetectResBase * _Nonnull)RSMockGPS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSGameHack;)
+ (RCDetectResBase * _Nonnull)RSGameHack SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSThreats;)
+ (RCDetectResBase * _Nonnull)RSThreats SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSNetType;)
+ (RCDetectResBase * _Nonnull)RSNetType SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSCarrier;)
+ (RCDetectResBase * _Nonnull)RSCarrier SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSDeviceInfo;)
+ (RCDetectResBase * _Nonnull)RSDeviceInfo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RCDetectResBase * _Nonnull RSProxyCap;)
+ (RCDetectResBase * _Nonnull)RSProxyCap SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<RCDetectResBase *> * _Nonnull mapRS;
- (void)initDetectResult SWIFT_METHOD_FAMILY(none);
- (void)updateDetectResult:(NSInteger)eventID :(NSString * _Nonnull)description :(NSString * _Nonnull)conditions :(NSString * _Nonnull)results :(NSString * _Nonnull)details;
@end


SWIFT_CLASS("_TtC5rcsdk15RCDetectResBase")
@interface RCDetectResBase : NSObject
- (NSNumber * _Nullable)oc_getEventId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDescription SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getConditions SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getResults SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDetails SWIFT_WARN_UNUSED_RESULT;
- (void)update:(NSString * _Nonnull)desc :(NSString * _Nonnull)conditions :(NSString * _Nonnull)results :(NSString * _Nonnull)details;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC5rcsdk8RSAUtils")
@interface RSAUtils : NSObject
+ (NSData * _Nullable)encryptWithRSAKey:(NSData * _Nonnull)data rsaKeyRef:(SecKeyRef _Nonnull)rsaKeyRef padding:(SecPadding)padding SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)decryptWithRSAKey:(NSData * _Nonnull)encryptedData rsaKeyRef:(SecKeyRef _Nonnull)rsaKeyRef padding:(SecPadding)padding SWIFT_WARN_UNUSED_RESULT;
+ (void)deleteRSAKeyFromKeychain:(NSString * _Nonnull)tagName;
+ (SecKeyRef _Nullable)getRSAKeyFromKeychain:(NSString * _Nonnull)tagName SWIFT_WARN_UNUSED_RESULT;
+ (SecKeyRef _Nullable)addRSAPrivateKey:(NSString * _Nonnull)privkeyBase64 tagName:(NSString * _Nonnull)tagName SWIFT_WARN_UNUSED_RESULT;
+ (SecKeyRef _Nullable)addRSAPublicKey:(NSString * _Nonnull)pubkeyBase64 tagName:(NSString * _Nonnull)tagName SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)encryptWithRSAPrivateKey:(NSData * _Nonnull)data privkeyBase64:(NSString * _Nonnull)privkeyBase64 keychainTag:(NSString * _Nonnull)keychainTag SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)encryptWithRSAPublicKey:(NSData * _Nonnull)data pubkeyBase64:(NSString * _Nonnull)pubkeyBase64 keychainTag:(NSString * _Nonnull)keychainTag SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)decryptWithRSAPrivateKey:(NSData * _Nonnull)encryptedData privkeyBase64:(NSString * _Nonnull)privkeyBase64 keychainTag:(NSString * _Nonnull)keychainTag SWIFT_WARN_UNUSED_RESULT;
+ (NSData * _Nullable)decryptWithRSAPublicKey:(NSData * _Nonnull)encryptedData pubkeyBase64:(NSString * _Nonnull)pubkeyBase64 keychainTag:(NSString * _Nonnull)keychainTag SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIDevice (SWIFT_EXTENSION(rcsdk))
@end

#pragma clang diagnostic pop
